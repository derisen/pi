    /**
{% block phpdoc_method_header %}
     * Full text search for {{ entity }} entities.
	 *
	 * To make this work, add a method like this one to the 
	 * {{ bundle }}:{{ entity }} repository. Replace the fieldName with
	 * something appropriate, and adjust the generated fulltext.html.twig
	 * template.
	 * 
	//    public function fulltextQuery($q) {
	//        $qb = $this->createQueryBuilder('e');
	//        $qb->addSelect("MATCH_AGAINST (e.name, :q 'IN BOOLEAN MODE') as score");
	//        $qb->add('where', "MATCH_AGAINST (e.name, :q 'IN BOOLEAN MODE') > 0.5");
	//        $qb->orderBy('score', 'desc');
	//        $qb->setParameter('q', $q);
	//        return $qb->getQuery();
	//    }	 
	 * 
	 * Requires a MatchAgainst function be added to doctrine, and appropriate
	 * fulltext indexes on your {{ entity }} entity.
	 *     ORM\Index(name="alias_name_idx",columns="name", flags={"fulltext"})
	 *
{% endblock phpdoc_method_header %}
     *
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}
     * @Route("/fulltext", name="{{ route_name_prefix }}_fulltext")
     * @Method("GET")
     * @Template()
	 * @param Request $request
	 * @return array
{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function fulltextAction(Request $request)
{% endblock method_definition %}
    {
{% block method_body %}
        $em = $this->getDoctrine()->getManager();
		$repo = $em->getRepository('{{ bundle }}:{{ entity }}');
		$q = $request->query->get('q');
		if($q) {
	        $query = $repo->fulltextQuery($q);
			$paginator = $this->get('knp_paginator');
			${{ entity_pluralized }} = $paginator->paginate($query, $request->query->getInt('page', 1), 25);
		} else {
			${{ entity_pluralized }} = array();
		}
{% endblock method_body %}

{% block method_return %}
        return array(
            '{{ entity_pluralized }}' => ${{ entity_pluralized }},
			'q' => $q,
        );
{% endblock method_return %}
    }
